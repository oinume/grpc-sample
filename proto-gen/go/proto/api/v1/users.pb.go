// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/api/v1/users.proto

/*
Package api_v1 is a generated protocol buffer package.

It is generated from these files:
	proto/api/v1/users.proto

It has these top-level messages:
	GetUserRequest
	GetUserResponse
	CreateUserRequest
	CreateUserResponse
	UpdateUserRequest
	UpdateUserResponse
	DeleteUserRequest
	DeleteUserResponse
*/
package api_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetUserRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetUserResponse struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *GetUserResponse) Reset()                    { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()               {}
func (*GetUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetUserResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetUserResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateUserRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateUserResponse struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *CreateUserResponse) Reset()                    { *m = CreateUserResponse{} }
func (m *CreateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateUserResponse) ProtoMessage()               {}
func (*CreateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateUserResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateUserResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateUserRequest struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *UpdateUserRequest) Reset()                    { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()               {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateUserResponse struct {
}

func (m *UpdateUserResponse) Reset()                    { *m = UpdateUserResponse{} }
func (m *UpdateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserResponse) ProtoMessage()               {}
func (*UpdateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type DeleteUserRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteUserRequest) Reset()                    { *m = DeleteUserRequest{} }
func (m *DeleteUserRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserRequest) ProtoMessage()               {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteUserResponse struct {
}

func (m *DeleteUserResponse) Reset()                    { *m = DeleteUserResponse{} }
func (m *DeleteUserResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserResponse) ProtoMessage()               {}
func (*DeleteUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func init() {
	proto.RegisterType((*GetUserRequest)(nil), "api.v1.GetUserRequest")
	proto.RegisterType((*GetUserResponse)(nil), "api.v1.GetUserResponse")
	proto.RegisterType((*CreateUserRequest)(nil), "api.v1.CreateUserRequest")
	proto.RegisterType((*CreateUserResponse)(nil), "api.v1.CreateUserResponse")
	proto.RegisterType((*UpdateUserRequest)(nil), "api.v1.UpdateUserRequest")
	proto.RegisterType((*UpdateUserResponse)(nil), "api.v1.UpdateUserResponse")
	proto.RegisterType((*DeleteUserRequest)(nil), "api.v1.DeleteUserRequest")
	proto.RegisterType((*DeleteUserResponse)(nil), "api.v1.DeleteUserResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Users service

type UsersClient interface {
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*DeleteUserResponse, error)
}

type usersClient struct {
	cc *grpc.ClientConn
}

func NewUsersClient(cc *grpc.ClientConn) UsersClient {
	return &usersClient{cc}
}

func (c *usersClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := grpc.Invoke(ctx, "/api.v1.Users/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := grpc.Invoke(ctx, "/api.v1.Users/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	out := new(UpdateUserResponse)
	err := grpc.Invoke(ctx, "/api.v1.Users/UpdateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*DeleteUserResponse, error) {
	out := new(DeleteUserResponse)
	err := grpc.Invoke(ctx, "/api.v1.Users/DeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Users service

type UsersServer interface {
	GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error)
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error)
	DeleteUser(context.Context, *DeleteUserRequest) (*DeleteUserResponse, error)
}

func RegisterUsersServer(s *grpc.Server, srv UsersServer) {
	s.RegisterService(&_Users_serviceDesc, srv)
}

func _Users_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.Users/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.Users/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.Users/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.Users/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.v1.Users",
	HandlerType: (*UsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _Users_GetUser_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _Users_CreateUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _Users_UpdateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _Users_DeleteUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/api/v1/users.proto",
}

func init() { proto.RegisterFile("proto/api/v1/users.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4f, 0x4a, 0xc3, 0x40,
	0x14, 0xc6, 0x49, 0xd0, 0x4a, 0xdf, 0x22, 0xda, 0x67, 0xa9, 0x69, 0x70, 0x51, 0xe2, 0x42, 0xe9,
	0x22, 0xa1, 0x8a, 0x28, 0x6e, 0x15, 0xdc, 0x07, 0xba, 0x10, 0x41, 0x18, 0xc9, 0xa3, 0x0c, 0xd4,
	0x4c, 0xcc, 0x4c, 0xbb, 0x11, 0x37, 0x5e, 0xc1, 0xa3, 0x79, 0x05, 0x6f, 0xe0, 0x05, 0x24, 0x93,
	0x3f, 0x13, 0x93, 0x22, 0xba, 0x0b, 0x2f, 0xdf, 0xf7, 0x7b, 0xc3, 0x6f, 0x06, 0xdc, 0x34, 0x13,
	0x4a, 0x84, 0x2c, 0xe5, 0xe1, 0x7a, 0x16, 0xae, 0x24, 0x65, 0x32, 0xd0, 0x23, 0xec, 0xb1, 0x94,
	0x07, 0xeb, 0x99, 0x77, 0xb8, 0x10, 0x62, 0xb1, 0x24, 0x1d, 0x61, 0x49, 0x22, 0x14, 0x53, 0x5c,
	0x24, 0x65, 0xca, 0x9f, 0x80, 0x73, 0x4b, 0x6a, 0x2e, 0x29, 0x8b, 0xe8, 0x79, 0x45, 0x52, 0xa1,
	0x03, 0x36, 0x8f, 0x5d, 0x6b, 0x62, 0x9d, 0xf4, 0x23, 0x9b, 0xc7, 0xfe, 0x39, 0xec, 0xd6, 0x09,
	0x99, 0x8a, 0x44, 0x52, 0x3b, 0x82, 0x08, 0x5b, 0x09, 0x7b, 0x22, 0xd7, 0xd6, 0x13, 0xfd, 0xed,
	0x1f, 0xc3, 0xe0, 0x3a, 0x23, 0xa6, 0xa8, 0xc9, 0xae, 0x82, 0x56, 0x23, 0x78, 0x09, 0xd8, 0x0c,
	0xfe, 0x63, 0xc5, 0x05, 0x0c, 0xe6, 0x69, 0xdc, 0x5a, 0xf1, 0x97, 0xe2, 0x10, 0xb0, 0x59, 0x2c,
	0x56, 0xfa, 0x47, 0x30, 0xb8, 0xa1, 0x25, 0xfd, 0x8a, 0xcb, 0xab, 0xcd, 0x50, 0x51, 0x3d, 0xfd,
	0xb2, 0x61, 0x3b, 0x1f, 0x48, 0x8c, 0x60, 0xa7, 0xb4, 0x85, 0xa3, 0xa0, 0xb8, 0x81, 0xe0, 0xa7,
	0x60, 0xef, 0xa0, 0x33, 0x2f, 0x0f, 0x30, 0x7a, 0xfb, 0xf8, 0x7c, 0xb7, 0xf7, 0xd0, 0xa9, 0xaf,
	0x32, 0x7c, 0xe1, 0xf1, 0x2b, 0xde, 0x01, 0x18, 0x43, 0x38, 0xae, 0xea, 0x1d, 0xbd, 0x9e, 0xb7,
	0xe9, 0x57, 0x09, 0x1f, 0x6a, 0xb8, 0xe3, 0xf7, 0x6b, 0xf8, 0x95, 0x35, 0xc5, 0x07, 0x00, 0x63,
	0xc2, 0xa0, 0x3b, 0x5a, 0x0d, 0x7a, 0x83, 0xb8, 0xb1, 0x46, 0xef, 0x7b, 0xad, 0x73, 0xe7, 0xfc,
	0x7b, 0x00, 0xa3, 0xcb, 0xf0, 0x3b, 0x9e, 0x0d, 0xbf, 0x6b, 0xb7, 0xf2, 0x32, 0x6d, 0xf1, 0x1f,
	0x7b, 0xfa, 0x09, 0x9f, 0x7d, 0x07, 0x00, 0x00, 0xff, 0xff, 0xba, 0x67, 0xb4, 0xb9, 0x04, 0x03,
	0x00, 0x00,
}
